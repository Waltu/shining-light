// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: charger_commander.proto

package chargercommander

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to send a command
type SendCommandRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChargePointId  string                 `protobuf:"bytes,1,opt,name=charge_point_id,json=chargePointId,proto3" json:"charge_point_id,omitempty"`  // ID of the target charger
	MessageId      string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                // Unique message ID for the OCPP Call message to be sent
	Action         string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`                                       // The OCPP action name (e.g., "RemoteStartTransaction")
	RequestPayload []byte                 `protobuf:"bytes,4,opt,name=request_payload,json=requestPayload,proto3" json:"request_payload,omitempty"` // The JSON payload for the OCPP action
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendCommandRequest) Reset() {
	*x = SendCommandRequest{}
	mi := &file_charger_commander_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandRequest) ProtoMessage() {}

func (x *SendCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_charger_commander_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandRequest.ProtoReflect.Descriptor instead.
func (*SendCommandRequest) Descriptor() ([]byte, []int) {
	return file_charger_commander_proto_rawDescGZIP(), []int{0}
}

func (x *SendCommandRequest) GetChargePointId() string {
	if x != nil {
		return x.ChargePointId
	}
	return ""
}

func (x *SendCommandRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendCommandRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SendCommandRequest) GetRequestPayload() []byte {
	if x != nil {
		return x.RequestPayload
	}
	return nil
}

// Response from sending a command
type SendCommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                              // Did the listener successfully find the connection and send the command?
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Error details if success is false (e.g., "Charger not connected")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCommandResponse) Reset() {
	*x = SendCommandResponse{}
	mi := &file_charger_commander_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandResponse) ProtoMessage() {}

func (x *SendCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_charger_commander_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandResponse.ProtoReflect.Descriptor instead.
func (*SendCommandResponse) Descriptor() ([]byte, []int) {
	return file_charger_commander_proto_rawDescGZIP(), []int{1}
}

func (x *SendCommandResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendCommandResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_charger_commander_proto protoreflect.FileDescriptor

const file_charger_commander_proto_rawDesc = "" +
	"\n" +
	"\x17charger_commander.proto\x12\x10chargercommander\"\x9c\x01\n" +
	"\x12SendCommandRequest\x12&\n" +
	"\x0fcharge_point_id\x18\x01 \x01(\tR\rchargePointId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12'\n" +
	"\x0frequest_payload\x18\x04 \x01(\fR\x0erequestPayload\"T\n" +
	"\x13SendCommandResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage2p\n" +
	"\x10ChargerCommander\x12\\\n" +
	"\vSendCommand\x12$.chargercommander.SendCommandRequest\x1a%.chargercommander.SendCommandResponse\"\x00B7Z5github.com/waltu/shining-light/proto/chargercommanderb\x06proto3"

var (
	file_charger_commander_proto_rawDescOnce sync.Once
	file_charger_commander_proto_rawDescData []byte
)

func file_charger_commander_proto_rawDescGZIP() []byte {
	file_charger_commander_proto_rawDescOnce.Do(func() {
		file_charger_commander_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_charger_commander_proto_rawDesc), len(file_charger_commander_proto_rawDesc)))
	})
	return file_charger_commander_proto_rawDescData
}

var file_charger_commander_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_charger_commander_proto_goTypes = []any{
	(*SendCommandRequest)(nil),  // 0: chargercommander.SendCommandRequest
	(*SendCommandResponse)(nil), // 1: chargercommander.SendCommandResponse
}
var file_charger_commander_proto_depIdxs = []int32{
	0, // 0: chargercommander.ChargerCommander.SendCommand:input_type -> chargercommander.SendCommandRequest
	1, // 1: chargercommander.ChargerCommander.SendCommand:output_type -> chargercommander.SendCommandResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_charger_commander_proto_init() }
func file_charger_commander_proto_init() {
	if File_charger_commander_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_charger_commander_proto_rawDesc), len(file_charger_commander_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_charger_commander_proto_goTypes,
		DependencyIndexes: file_charger_commander_proto_depIdxs,
		MessageInfos:      file_charger_commander_proto_msgTypes,
	}.Build()
	File_charger_commander_proto = out.File
	file_charger_commander_proto_goTypes = nil
	file_charger_commander_proto_depIdxs = nil
}
